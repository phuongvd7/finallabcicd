	// git repository info
	def gitRepository = 'https://github.com/phuongvd7/finallabcicd.git'
	def gitBranch = 'eks'
	def githubCredential = 'github'

	// Image infor in registry
	def dockerhubusername = 'phuongvd7'
	def dockerhubreponame = 'testargocd'	
    //helm param for upgrade
	def helmRelease="myweb"
	def namespace="default"
	def helmValues = "/var/lib/jenkins/workspace/APP_DEMO/my-app/helmchart/app-demo-value.yaml"
	def helmChart = "/var/lib/jenkins/workspace/APP_DEMO/my-app/helmchart/app-demo"
	// argoCD 

	def appConfigRepo = 'https://github.com/phuongvd7/app-helmchart.git'
	def appConfigBranch = 'master'
	def helmRepo = "app-helmchart"
	def helmChart = "app-demo"
	def helmValueFile = "app-demo/values.yaml"


	pipeline {
		agent { label 'slave' }
		environment {
			DOCKERHUB_CREDENTIALS= credentials('dockerhubnotprivatekey')
			DOCKER_IMAGE_NAME = "${dockerhubusername}/${dockerhubreponame}"
			dockerImage = ''
			
		}
		stages {		
			stage('Checkout project') 
			{
			  steps 
			  {
				echo "checkout project"
				git branch: gitBranch,
				//    credentialsId: githubCredential,
				   url: gitRepository
				sh "git reset --hard"
			  }
			}

			stage('Build')
			{
			  steps{
				// script {
				// 	dockerImage = docker.build DOCKER_IMAGE_NAME + ":$BUILD_NUMBER" 
				// }
					sh 'docker build . -t $DOCKER_IMAGE_NAME:$BUILD_NUMBER -t $DOCKER_IMAGE_NAME:latest'
					echo 'Build Image Completed' 
			  }
			}
			stage('Login and push images') {      	
   			  steps{                       	
				// script {
          		// 	docker.withRegistry( '', DOCKERHUB_CREDENTIALS ) {
            	// 	dockerImage.push()					
				// }
				withCredentials([usernamePassword(credentialsId: 'dockerhubnotprivatekey', passwordVariable: 'dockerhubpasswd', usernameVariable: 'dockerhubusername')]) {
					sh 'echo $dockerhubpasswd | docker login -u $dockerhubusername --password-stdin'
					echo 'Login Completed'
					sh 'docker login'
					sh 'docker push $DOCKER_IMAGE_NAME:$BUILD_NUMBER'
					sh 'docker push $DOCKER_IMAGE_NAME:latest'
					// sh 'docker rmi $DOCKER_IMAGE_NAME:$BUILD_NUMBER'
					sh 'docker rmi $(docker images -a -q) -f'
					// sh 'docker logout'	
					// sh 'bash ./scripting/CI_notification.sh $DOCKER_IMAGE_NAME:$BUILD_NUMBER'				
				}
     
   			   }           
			}	   
		

			// stage('Update value in helm-chart') {
			// 	steps {
				
			// 		withCredentials([usernamePassword(credentialsId: 'githubuserpass', passwordVariable: 'GIT_PASSWORD', usernameVariable: 'GIT_USERNAME')]) {
			// 		sh """#!/bin/bash
			// 			[[ -d ${helmRepo} ]] && rm -r ${helmRepo}
			// 			git clone ${appConfigRepo} --branch ${appConfigBranch}
			// 			cd ${helmRepo}
			// 			sed -i 's|  tag: .*|  tag: "${BUILD_NUMBER}"|' ${helmValueFile}
			// 			git add . ; git commit -m "Update to version ${BUILD_NUMBER}";git push https://${GIT_USERNAME}:${GIT_PASSWORD}@github.com/phuongvd7/app-helmchart.git
			// 			cd ..
			// 			[[ -d ${helmRepo} ]] && rm -r ${helmRepo}
			// 			"""		
			// 		}				
			// 	}

			
			// }
			stage('Update value in helm-chart') {
              steps {
				withCredentials([usernamePassword(credentialsId: 'githubuserpass', passwordVariable: 'GIT_PASSWORD', usernameVariable: 'GIT_USERNAME')]) {
				sh """#!/bin/bash
					   [[ -d ${helmRepo} ]] && rm -r ${helmRepo}
					   git clone ${appConfigRepo} --branch ${appConfigBranch}
					   cd ${helmRepo}
					   sed -i 's|  tag: .*|  tag: "${BUILD_NUMBER}"|' ${helmValueFile}
					   git add . ; git commit -m "Update to version ${BUILD_NUMBER}";git push https://${GIT_USERNAME}:${GIT_PASSWORD}@github.com/phuongvd7/app-helmchart.git
					   cd ..
					   [[ -d ${helmRepo} ]] && rm -r ${helmRepo}
					   """		
					}				
            	}
        	}
		}
	}